
@using InventoryMVC.Models.ViewModels;
@using InventoryMVC.Helpers;
@model PaginatedList<CategoryViewModel>;

@{
    ViewData["Title"] = "Categories";
}


<div class="container">

    <div class="d-flex justify-content-between align-items-center">
        <h1 class="text-primary">Categories</h1>
        <a class="btn btn-primary mb-3" asp-action="Create">Add new category</a>
    </div>

    @if (Model.Count() > 0)
    {
        <div class="row text-center">
            <table class="table">
                <thead class="thead-light">
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model[0].CategoryName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model[0].Description)
                        </th>

                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in Model)
                    {
                        <tr id="row_@category.Id">
                            <td>
                                @Html.DisplayFor(modelItem => category.CategoryName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => category.Description)
                            </td>
                            <td>
                                <a class="btn btn-primary py-1" asp-controller="Category" asp-action="Edit" asp-route-id="@category.Id" asp-route-pageNumber="@ViewBag.PageNumber">Edit</a>
                                <a class="btn btn-danger py-1" onclick="ConfirmDelete(@category.Id, 'Delete Category', '@category.CategoryName')">
                                    Delete
                                </a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        @await Html.PartialAsync("_PaginationPartial",
            new PaginationInfo
            {
                PreviousDisabled = !Model.HasPrevious,
                NextDisabled = !Model.HasNext,
                PageNumber = Model.PageNumber,
                TotalPages = Model.TotalPages
            }
        );
    }
    else
    {
        <h2>There aren't categories yet</h2>
    }

</div>

<!-- Modal -->
@await Html.PartialAsync("_ConfirmDelete",
                    new ItemInfo
                    {
                        ControllerName = "Category",
                        ActionName = "Delete",
                    })


@section scripts{

    <script src="js/delete.js"></script>

}

